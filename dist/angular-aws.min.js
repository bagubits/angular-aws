var angularAWS=angular.module("angular-aws",[]);angularAWS.provider("$AWS",[function(){this.MFARequired=!1,this.poolData=null,this.identityPoolId=null,this.cognitoLoginId=null,this.userAttributes=null,this.region=null,this.SESSource=null,this.setRegion=function(a){this.region=a,AWSCognito.config.region="us-east-1",AWS.config.region="us-east-1"},this.$get=[function(){return{MFARequired:this.MFARequired,poolData:this.poolData,identityPoolId:this.identityPoolId,cognitoLoginId:this.cognitoLoginId,userAttributes:this.userAttributes,setRegion:this.setRegion,SESSource:this.SESSource}}]}]),angularAWS.service("Cognito",["$AWS",function(a){var b=this;this.cognitoUser=null,this.userPool=new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(a.poolData),this.cognitoUserdata={name:"",pass:"",attributelist:Array()},this.cognitoAttributeList=Array(),this.credentials=null,this.initialize=function(a,b,c){this.cognitoUserdata.name=a,this.cognitoUserdata.pass=b,this.cognitoUserdata.attributelist=c},this.register=function(a,c,d,e){angular.forEach(d,function(a,c){var d=new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute(a);b.cognitoAttributeList.push(d)}),this.cognitoUserdata.name=a,this.cognitoUserdata.pass=c,this.cognitoUserdata.attributelist=this.cognitoAttributeList,this.userPool.signUp(a,c,this.cognitoAttributeList,null,function(a,b){return a?e(!1,a):(this.cognitoUser=b.user,e(!0,this.cognitoUser))})},this.validate=function(a,b,c){this.cognitoUser||(this.cognitoUser=new AWSCognito.CognitoIdentityServiceProvider.CognitoUser({Username:b,Pool:this.userPool})),this.cognitoUser.confirmRegistration(a,!0,function(a,b){return a?c(!1,a):c(!0,b)})},this.authenticate=function(c,d,e){this.cognitoUser||(this.cognitoUser=new AWSCognito.CognitoIdentityServiceProvider.CognitoUser({Username:c,Pool:this.userPool}));var f=new AWSCognito.CognitoIdentityServiceProvider.AuthenticationDetails({Username:c,Password:d});this.cognitoUserdata.name=c,this.cognitoUserdata.pass=d,this.cognitoUser.authenticateUser(f,{onSuccess:function(c){var d={};d[a.cognitoLoginId]=c.getIdToken().getJwtToken(),AWS.config.region=AWSCognito.config.region,b.credentials=d,b.setCredentials(d),e(!0,c)},mfaRequired:function(a){e(!1,"Confirmation required",a)},onFailure:function(a){e(!1,a)}})},this.socialAuthenticate=function(a,c,d){var e=!1,f={};switch(a){case"google":f["accounts.google.com"]=c,e=!0;break;case"facebook":f["graph.facebook.com"]=c,e=!0}e?(b.credentials=f,b.setCredentials(f),AWS.config.credentials.get(function(a){a?d(!1,a):d(!0)})):d(!1)},this.unauthenticatedCredentials=function(b){AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:a.identityPoolId}),AWS.config.credentials.get(function(){b({accessKeyId:AWS.config.credentials.accessKeyId,secretAccessKey:AWS.config.credentials.secretAccessKey,sessionToken:AWS.config.credentials.sessionToken})})},this.getCredentials=function(){return this.credentials},this.setCredentials=function(b){this.credentials=b,AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:a.identityPoolId,region:AWSCognito.config.region,Logins:b})},this.signOut=function(){return this.cognitoUser?this.cognitoUser.globalSignOut():null},this.getSession=function(c){var d=b.userPool.getCurrentUser();null!=d?d.getSession(function(b,d){if(d){var e={};e[a.cognitoLoginId]=d.getIdToken().getJwtToken(),AWS.config.region=AWSCognito.config.region,AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:a.identityPoolId,region:AWSCognito.config.region,Logins:e}),AWS.config.credentials.get(function(a){a?console.error(a):(AWS.config.update({accessKeyId:AWS.config.credentials.accessKeyId,secretAccessKey:AWS.config.credentials.secretAccessKey}),c&&c(AWS.config.credentials))})}else console.error(b)}):c(null)},this.getCurrentUser=function(a){var b=this.userPool.getCurrentUser();a(b)},this.getUserAttributes=function(a){var b=this.userPool.getCurrentUser();null!=b&&(this.cognitoUser||(this.cognitoUser=new AWSCognito.CognitoIdentityServiceProvider.CognitoUser({Username:b.username,Pool:this.userPool})),this.cognitoUser.getUserAttributes(function(b,c){b?a(!1,b):a(!0,c)}))}}]),angularAWS.service("DynamoDB",function(){function a(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}this.db=null,this.read=function(a,b){this.db||(this.db=new AWS.DynamoDB),this.db.getItem(a,function(a,c){return a?b(!1,a):b(!0,c)})},this.getguid=function(){return a()},this.write=function(a,b,c){this.db||(this.db=new AWS.DynamoDB);var d=DynamoDbDataTypes.AttributeValue.wrap(b),e={TableName:a,Item:d};this.db.putItem(e,function(a,b){return a?c(!1,a):c(!0,b)})},this.scan=function(a,b){var c=new AWS.DynamoDB.DocumentClient;c.scan(a,b)}}),angularAWS.service("Lambda",function(){this.invoke=function(a,b,c){var d=new AWS.Lambda,e={FunctionName:a,LogType:"Tail",Payload:JSON.stringify(c)};d.invoke(e,function(a,c){a?b(!1,a):b(!0,c)})}}),angularAWS.service("S3",function(){this.upload=function(a,b,c,d){var a=new AWS.S3({params:{Bucket:a}}),e={Key:b,ContentType:c.type,Body:c,ACL:"public-read"};a.upload(e,function(a,b){a?d(!1):d(!0,b)})}}),angularAWS.service("SES",["$AWS",function(a){this.sendEmail=function(b,c,d,e){var f=new AWS.SES,g={Destination:{ToAddresses:[b]},Message:{Body:{Text:{Data:d,Charset:"utf8"}},Subject:{Data:c,Charset:"utf8"}},Source:a.SESSource};f.sendEmail(g,function(a,b){a?e(!1,a.stack):e(!0)})}}]);
//# sourceMappingURL=angular-aws.min.js.map